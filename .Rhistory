#might want to explore making color a factor variable if I want a specific order for my bar chart
#prints$color <- factor(prints$color, ordered = FALSE)
# If we want to order the colors on the bar chart by count
# prints$color <- factor(prints$color, levels = names(sort(table(prints$color), decreasing = TRUE)))
one <-  ggplot(prints, aes(x= color, fill = color)) +
geom_bar(show.legend = FALSE, color = "black") +
labs(title = "Color Distribution for 3D Prints",
y = "Number of Prints",
x = NULL,
subtitle = "After Online Form (after 6/5/23)") +
scale_y_continuous(
breaks = seq(0, 14, by = 2),
#minor_breaks = seq(0, 22, by = 1),
limits = c(0, 14)) +
#Archive print list color values
#scale_fill_manual(values = c("black", "blue", "darkgrey", "green", "lightgrey", "pink", "hotpink3", "mediumpurple4", "red", "ivory1", "indianred1", "yellow")) +
#Current print list color values
scale_fill_manual(values = c("black", 'blue', 'green', 'darkgrey', 'orange', 'lightpink', 'red', 'floralwhite', 'yellow')) +
theme_clean() +
theme(plot.subtitle = element_text(size = 10),
axis.text.x = element_text(angle = 30, hjust = 1))
#In case we need to rotate the x axis labels or put in a minor line
#theme(axis.text.x = element_text(angle = 45, hjust = 1),
#panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"))
ggsave(one, file = "print distribution_after.png")
library(tidyverse)
library(ggthemes)
library(readxl)
library(writexl)
#prints <- read_excel("C:/Users/Ryan/Coding Projects/KDL Project/3D Printing analysis/Data/EGR KDL Master 3D Printing List.xlsx")
#Loading in the excel file when 3d printing analysis is set as working directory
prints <- read_excel("C:/Users/Ryan/Coding Projects/KDL Project/3D Printing analysis/Data/EGR KDL Master 3D Printing List.xlsx")
#Filtering the data based on date
#prints <- prints %>% filter(completion_time >= as.Date("2023-04-13"))
View(prints)
library(tidyverse)
library(ggthemes)
library(readxl)
library(writexl)
#prints <- read_excel("C:/Users/Ryan/Coding Projects/KDL Project/3D Printing analysis/Data/EGR KDL Master 3D Printing List.xlsx")
#Loading in the excel file when 3d printing analysis is set as working directory
prints <- read_excel("C:/Users/Ryan/Coding Projects/KDL Project/3D Printing analysis/Data/EGR KDL Master 3D Printing List.xlsx")
#Filtering the data based on date
#prints <- prints %>% filter(completion_time >= as.Date("2023-04-13"))
#Wrangling the data to be in pie chart format
pies <- prints %>% count(print)
pies$percent_NOP <- pies$n / sum(pies$n) * 100
pies$print <- as.character(pies$print)
pies1 <- pies %>% head(20)
# Create the pie chart
ggplot(pies1, aes(x = "", y = percent_NOP, fill = print)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(round(percent_NOP), "%")),
position = position_jitterdodge(jitter.width = 0.2, dodge.width = .8),
size = 4) +
#geom_text(aes(label = paste0(round(percent_NOP), "%")), position = position_stack(vjust = 0.5)) +
#scale_fill_brewer(palette = "Dark2", name = "Number of People per Group") +
labs(
title = "Study Rooms Requests by Group Size"
) +
theme_void()
#ggsave(one, file = "C:/Users/Ryan/Coding Projects/KDL Project/3D Printing analysis/pie.png")
#Still really difficult to see graphically so will make a table
ggplot(prints, aes(x = print)) +
geom_bar()
table_prints <- table(prints$print)
table_counts_df <- as.data.frame(table_prints)
# Rename the columns in the data frame
colnames(table_counts_df) <- c("Print", "Count")
table_counts_df <- arrange(table_counts_df, desc(Count))
print(table_counts_df)
#write_xlsx(table_counts_df, "print distribution_after.xlsx")
#might be useful later when coloring each bar chart according to it's actual color
colors_list <- unique(prints$color)
#might want to explore making color a factor variable if I want a specific order for my bar chart
#prints$color <- factor(prints$color, ordered = FALSE)
# If we want to order the colors on the bar chart by count
# prints$color <- factor(prints$color, levels = names(sort(table(prints$color), decreasing = TRUE)))
one <-  ggplot(prints, aes(x= color, fill = color)) +
geom_bar(show.legend = FALSE, color = "black") +
labs(title = "Color Distribution for 3D Prints",
y = "Number of Prints",
x = NULL,
subtitle = "After Online Form (after 6/5/23)") +
scale_y_continuous(
breaks = seq(0, 14, by = 2),
#minor_breaks = seq(0, 22, by = 1),
limits = c(0, 14)) +
#Archive print list color values
#scale_fill_manual(values = c("black", "blue", "darkgrey", "green", "lightgrey", "pink", "hotpink3", "mediumpurple4", "red", "ivory1", "indianred1", "yellow")) +
#Current print list color values
scale_fill_manual(values = c("black", 'blue', 'green', 'darkgrey', 'orange', 'lightpink', 'red', 'floralwhite', 'yellow')) +
theme_clean() +
theme(plot.subtitle = element_text(size = 10),
axis.text.x = element_text(angle = 30, hjust = 1))
#In case we need to rotate the x axis labels or put in a minor line
#theme(axis.text.x = element_text(angle = 45, hjust = 1),
#panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"))
ggsave(one, file = "print distribution_after.png")
View(prints)
#I filter out ID number 210 here because that was an outlier for contacting the person
prints <- prints %>% mutate(turnaround = as.Date(contacted_date) - as.Date(completion_time)) %>% filter(ID != 210)
#looking at turnaround time as a difftime variable
class(prints$turnaround)
summary(prints$turnaround, na.rm = TRUE)
mean(prints$turnaround, na.rm = TRUE)
#Changing turnaround variable to a numeric variable for a more standard analysis
prints$turnaround <- as.numeric(prints$turnaround)
summary(prints$turnaround, na.rm = TRUE)
mean_turnaround <- mean(prints$turnaround, na.rm = TRUE)
print(paste0("On average, it took us ", round(mean_turnaround, 2), " days to complete a patrons print once they requested it"))
View(prints)
library(tidyverse)
library(ggthemes)
library(readxl)
library(writexl)
#prints <- read_excel("C:/Users/Ryan/Coding Projects/KDL Project/3D Printing analysis/Data/EGR KDL Master 3D Printing List.xlsx")
#Loading in the excel file when 3d printing analysis is set as working directory
prints <- read_excel("Data/Example data.xlsx")
#Filtering the data based on date
#prints <- prints %>% filter(completion_time >= as.Date("2023-04-13"))
View(prints)
library(tidyverse)
library(ggthemes)
library(readxl)
library(writexl)
#prints <- read_excel("C:/Users/Ryan/Coding Projects/KDL Project/3D Printing analysis/Data/EGR KDL Master 3D Printing List.xlsx")
#Loading in the excel file when 3d printing analysis is set as working directory
prints <- read_excel("Data/Example data.xlsx")
#Filtering the data based on date
#prints <- prints %>% filter(completion_time >= as.Date("2023-04-13"))
#Wrangling the data to be in pie chart format
pies <- prints %>% count(print)
pies$percent_NOP <- pies$n / sum(pies$n) * 100
pies$print <- as.character(pies$print)
pies1 <- pies %>% head(20)
# Create the pie chart
ggplot(pies1, aes(x = "", y = percent_NOP, fill = print)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(round(percent_NOP), "%")),
position = position_jitterdodge(jitter.width = 0.2, dodge.width = .8),
size = 4) +
#geom_text(aes(label = paste0(round(percent_NOP), "%")), position = position_stack(vjust = 0.5)) +
#scale_fill_brewer(palette = "Dark2", name = "Number of People per Group") +
labs(
title = "Study Rooms Requests by Group Size"
) +
theme_void()
#ggsave(one, file = "C:/Users/Ryan/Coding Projects/KDL Project/3D Printing analysis/pie.png")
#Still really difficult to see graphically so will make a table
ggplot(prints, aes(x = print)) +
geom_bar()
table_prints <- table(prints$print)
table_counts_df <- as.data.frame(table_prints)
# Rename the columns in the data frame
colnames(table_counts_df) <- c("Print", "Count")
table_counts_df <- arrange(table_counts_df, desc(Count))
print(table_counts_df)
#write_xlsx(table_counts_df, "print distribution_after.xlsx")
#might be useful later when coloring each bar chart according to it's actual color
colors_list <- unique(prints$color)
#might want to explore making color a factor variable if I want a specific order for my bar chart
#prints$color <- factor(prints$color, ordered = FALSE)
# If we want to order the colors on the bar chart by count
# prints$color <- factor(prints$color, levels = names(sort(table(prints$color), decreasing = TRUE)))
ggplot(prints, aes(x= color, fill = color)) +
geom_bar(show.legend = FALSE, color = "black") +
labs(title = "Color Distribution for 3D Prints",
y = "Number of Prints",
x = NULL,
subtitle = "After Online Form (after 6/5/23)") +
scale_y_continuous(
breaks = seq(0, 14, by = 2),
#minor_breaks = seq(0, 22, by = 1),
limits = c(0, 14)) +
#Archive print list color values
#scale_fill_manual(values = c("black", "blue", "darkgrey", "green", "lightgrey", "pink", "hotpink3", "mediumpurple4", "red", "ivory1", "indianred1", "yellow")) +
#Current print list color values
scale_fill_manual(values = c("black", 'blue', 'green', 'darkgrey', 'orange', 'lightpink', 'red', 'floralwhite', 'yellow')) +
theme_clean() +
theme(plot.subtitle = element_text(size = 10),
axis.text.x = element_text(angle = 30, hjust = 1))
#In case we need to rotate the x axis labels or put in a minor line
#theme(axis.text.x = element_text(angle = 45, hjust = 1),
#panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"))
#ggsave(one, file = "print distribution_after.png")
#I filter out ID number 210 here because that was an outlier for contacting the person
prints <- prints %>% mutate(turnaround = as.Date(contacted_date) - as.Date(completion_time)) %>% filter(ID != 210)
#looking at turnaround time as a difftime variable
class(prints$turnaround)
summary(prints$turnaround, na.rm = TRUE)
mean(prints$turnaround, na.rm = TRUE)
#Changing turnaround variable to a numeric variable for a more standard analysis
prints$turnaround <- as.numeric(prints$turnaround)
summary(prints$turnaround, na.rm = TRUE)
mean_turnaround <- mean(prints$turnaround, na.rm = TRUE)
print(paste0("On average, it took us ", round(mean_turnaround, 2), " days to complete a patrons print once they requested it"))
emails_fails <- sum(prints$invalid_email == "X", na.rm = TRUE)
emails_fails <- round(emails_fails / length(prints$failed), digits = 2)
print(paste0(emails_fails * 100, "%", " patrons inputted email addresses were flagged failed by the program"))
fails <- sum(prints$failed == "X", na.rm = TRUE)
fail_percent <- round(fails / length(prints$failed), digits = 2)
print(paste0(fail_percent * 100, "%", " of our total print requests failed"))
prints_completed <- filter(prints, print_completed == "X")
picked_up <- sum(prints_completed$picked_up == "X", na.rm = TRUE)
picked_up <- round(picked_up / length(prints$picked_up), digits = 3)
print(paste0("Of the completed print rquests, ", picked_up * 100, "%", " of patrons have picked up their 3D prints"))
#Saving graphs
#ggsave(one, file = "C:/Users/Ryan/Coding Projects/KDL Project/3D Printing analysis")
View(prints)
#might be useful later when coloring each bar chart according to it's actual color
colors_list <- unique(prints$color)
#might want to explore making color a factor variable if I want a specific order for my bar chart
#prints$color <- factor(prints$color, ordered = FALSE)
# If we want to order the colors on the bar chart by count
# prints$color <- factor(prints$color, levels = names(sort(table(prints$color), decreasing = TRUE)))
ggplot(prints, aes(x= color, fill = color)) +
geom_bar(show.legend = FALSE, color = "black") +
labs(title = "Color Distribution for 3D Prints",
y = "Number of Prints",
x = NULL,
subtitle = "After Online Form (after 6/5/23)") +
scale_y_continuous(
breaks = seq(0, 14, by = 2),
#minor_breaks = seq(0, 22, by = 1),
limits = c(0, 14)) +
#Archive print list color values
#scale_fill_manual(values = c("black", "blue", "darkgrey", "green", "lightgrey", "pink", "hotpink3", "mediumpurple4", "red", "ivory1", "indianred1", "yellow")) +
#Current print list color values
#scale_fill_manual(values = c("black", 'blue', 'green', 'darkgrey', 'orange', 'lightpink', 'red', 'floralwhite', 'yellow')) +
scale_fill_manual(values = c("black", 'blue', 'green', 'darkgrey', 'orange', 'lightpink', 'red', 'floralwhite', 'yellow')) +
theme_clean() +
theme(plot.subtitle = element_text(size = 10),
axis.text.x = element_text(angle = 30, hjust = 1))
#In case we need to rotate the x axis labels or put in a minor line
#theme(axis.text.x = element_text(angle = 45, hjust = 1),
#panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"))
#ggsave(one, file = "print distribution_after.png")
#might be useful later when coloring each bar chart according to it's actual color
colors_list <- unique(prints$color)
#might want to explore making color a factor variable if I want a specific order for my bar chart
#prints$color <- factor(prints$color, ordered = FALSE)
# If we want to order the colors on the bar chart by count
# prints$color <- factor(prints$color, levels = names(sort(table(prints$color), decreasing = TRUE)))
ggplot(prints, aes(x= color, fill = color)) +
geom_bar(show.legend = FALSE, color = "black") +
labs(title = "Color Distribution for 3D Prints",
y = "Number of Prints",
x = NULL,
subtitle = "After Online Form (after 6/5/23)") +
scale_y_continuous(
breaks = seq(0, 14, by = 2),
#minor_breaks = seq(0, 22, by = 1),
limits = c(0, 14)) +
#Archive print list color values
#scale_fill_manual(values = c("black", "blue", "darkgrey", "green", "lightgrey", "pink", "hotpink3", "mediumpurple4", "red", "ivory1", "indianred1", "yellow")) +
#Current print list color values
#scale_fill_manual(values = c("black", 'blue', 'green', 'darkgrey', 'orange', 'lightpink', 'red', 'floralwhite', 'yellow')) +
scale_fill_manual(values = c( 'blue', 'green',  'orange')) +
theme_clean() +
theme(plot.subtitle = element_text(size = 10),
axis.text.x = element_text(angle = 30, hjust = 1))
#In case we need to rotate the x axis labels or put in a minor line
#theme(axis.text.x = element_text(angle = 45, hjust = 1),
#panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"))
#ggsave(one, file = "print distribution_after.png")
library(tidyverse)
library(ggthemes)
library(readxl)
library(writexl)
#prints <- read_excel("C:/Users/Ryan/Coding Projects/KDL Project/3D Printing analysis/Data/EGR KDL Master 3D Printing List.xlsx")
#Loading in the excel file when 3d printing analysis is set as working directory
prints <- read_excel("Data/Example data.xlsx")
#Filtering the data based on date
#prints <- prints %>% filter(completion_time >= as.Date("2023-04-13"))
#Wrangling the data to be in pie chart format
pies <- prints %>% count(print)
pies$percent_NOP <- pies$n / sum(pies$n) * 100
pies$print <- as.character(pies$print)
pies1 <- pies %>% head(20)
# Create the pie chart
ggplot(pies1, aes(x = "", y = percent_NOP, fill = print)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(round(percent_NOP), "%")),
position = position_jitterdodge(jitter.width = 0.2, dodge.width = .8),
size = 4) +
#geom_text(aes(label = paste0(round(percent_NOP), "%")), position = position_stack(vjust = 0.5)) +
#scale_fill_brewer(palette = "Dark2", name = "Number of People per Group") +
labs(
title = "Study Rooms Requests by Group Size"
) +
theme_void()
#ggsave(one, file = "C:/Users/Ryan/Coding Projects/KDL Project/3D Printing analysis/pie.png")
#Wrangling the data to be in pie chart format
pies <- prints %>% count(print)
pies$percent_NOP <- pies$n / sum(pies$n) * 100
pies$print <- as.character(pies$print)
pies1 <- pies %>% head(20)
# Create the pie chart
one <- ggplot(pies1, aes(x = "", y = percent_NOP, fill = print)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(round(percent_NOP), "%")),
position = position_jitterdodge(jitter.width = 0.2, dodge.width = .8),
size = 4) +
#geom_text(aes(label = paste0(round(percent_NOP), "%")), position = position_stack(vjust = 0.5)) +
#scale_fill_brewer(palette = "Dark2", name = "Number of People per Group") +
labs(
title = "Study Rooms Requests by Group Size"
) +
theme_void()
ggsave(one, file = "pie12.png")
library(tidyverse)
library(ggthemes)
library(readxl)
library(writexl)
#prints <- read_excel("C:/Users/Ryan/Coding Projects/KDL Project/3D Printing analysis/Data/EGR KDL Master 3D Printing List.xlsx")
#Loading in the excel file when 3d printing analysis is set as working directory
prints <- read_excel("Data/Example data.xlsx")
#Filtering the data based on date
#prints <- prints %>% filter(completion_time >= as.Date("2023-04-13"))
#Wrangling the data to be in pie chart format
pies <- prints %>% count(print)
pies$percent_NOP <- pies$n / sum(pies$n) * 100
pies$print <- as.character(pies$print)
pies1 <- pies %>% head(20)
# Create the pie chart
ggplot(pies1, aes(x = "", y = percent_NOP, fill = print)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(round(percent_NOP), "%")),
position = position_jitterdodge(jitter.width = 0.2, dodge.width = .8),
size = 4) +
#geom_text(aes(label = paste0(round(percent_NOP), "%")), position = position_stack(vjust = 0.5)) +
#scale_fill_brewer(palette = "Dark2", name = "Number of People per Group") +
labs(
title = "Study Rooms Requests by Group Size"
) +
theme_void()
#ggsave(one, file = "pie12.png")
#Still really difficult to see graphically so will make a table
ggplot(prints, aes(x = print)) +
geom_bar()
table_prints <- table(prints$print)
table_counts_df <- as.data.frame(table_prints)
# Rename the columns in the data frame
colnames(table_counts_df) <- c("Print", "Count")
table_counts_df <- arrange(table_counts_df, desc(Count))
print(table_counts_df)
#write_xlsx(table_counts_df, "print distribution_after.xlsx")
#might be useful later when coloring each bar chart according to it's actual color
colors_list <- unique(prints$color)
#might want to explore making color a factor variable if I want a specific order for my bar chart
#prints$color <- factor(prints$color, ordered = FALSE)
# If we want to order the colors on the bar chart by count
# prints$color <- factor(prints$color, levels = names(sort(table(prints$color), decreasing = TRUE)))
ggplot(prints, aes(x= color, fill = color)) +
geom_bar(show.legend = FALSE, color = "black") +
labs(title = "Color Distribution for 3D Prints",
y = "Number of Prints",
x = NULL,
subtitle = "After Online Form (after 6/5/23)") +
scale_y_continuous(
breaks = seq(0, 14, by = 2),
#minor_breaks = seq(0, 22, by = 1),
limits = c(0, 14)) +
#Archive print list color values
#scale_fill_manual(values = c("black", "blue", "darkgrey", "green", "lightgrey", "pink", "hotpink3", "mediumpurple4", "red", "ivory1", "indianred1", "yellow")) +
#Current print list color values
#scale_fill_manual(values = c("black", 'blue', 'green', 'darkgrey', 'orange', 'lightpink', 'red', 'floralwhite', 'yellow')) +
scale_fill_manual(values = c( 'blue', 'green',  'orange')) +
theme_clean() +
theme(plot.subtitle = element_text(size = 10),
axis.text.x = element_text(angle = 30, hjust = 1))
#In case we need to rotate the x axis labels or put in a minor line
#theme(axis.text.x = element_text(angle = 45, hjust = 1),
#panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"))
#ggsave(one, file = "print distribution_after.png")
#I filter out ID number 210 here because that was an outlier for contacting the person
prints <- prints %>% mutate(turnaround = as.Date(contacted_date) - as.Date(completion_time)) %>% filter(ID != 210)
#looking at turnaround time as a difftime variable
class(prints$turnaround)
summary(prints$turnaround, na.rm = TRUE)
mean(prints$turnaround, na.rm = TRUE)
#Changing turnaround variable to a numeric variable for a more standard analysis
prints$turnaround <- as.numeric(prints$turnaround)
summary(prints$turnaround, na.rm = TRUE)
mean_turnaround <- mean(prints$turnaround, na.rm = TRUE)
print(paste0("On average, it took us ", round(mean_turnaround, 2), " days to complete a patrons print once they requested it"))
emails_fails <- sum(prints$invalid_email == "X", na.rm = TRUE)
emails_fails <- round(emails_fails / length(prints$failed), digits = 2)
print(paste0(emails_fails * 100, "%", " patrons inputted email addresses were flagged failed by the program"))
fails <- sum(prints$failed == "X", na.rm = TRUE)
fail_percent <- round(fails / length(prints$failed), digits = 2)
print(paste0(fail_percent * 100, "%", " of our total print requests failed"))
prints_completed <- filter(prints, print_completed == "X")
picked_up <- sum(prints_completed$picked_up == "X", na.rm = TRUE)
picked_up <- round(picked_up / length(prints$picked_up), digits = 3)
print(paste0("Of the completed print rquests, ", picked_up * 100, "%", " of patrons have picked up their 3D prints"))
#Saving graphs
#ggsave(one, file = "C:/Users/Ryan/Coding Projects/KDL Project/3D Printing analysis")
library(tidyverse)
library(ggthemes)
library(readxl)
library(writexl)
#prints <- read_excel("C:/Users/Ryan/Coding Projects/KDL Project/3D Printing analysis/Data/EGR KDL Master 3D Printing List.xlsx")
#Loading in the excel file when 3d printing analysis is set as working directory
prints <- read_excel("Data/Example data.xlsx")
#Filtering the data based on date
#prints <- prints %>% filter(completion_time >= as.Date("2023-04-13"))
#Wrangling the data to be in pie chart format
pies <- prints %>% count(print)
pies$percent_NOP <- pies$n / sum(pies$n) * 100
pies$print <- as.character(pies$print)
pies1 <- pies %>% head(20)
# Create the pie chart
ggplot(pies1, aes(x = "", y = percent_NOP, fill = print)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(round(percent_NOP), "%")),
position = position_jitterdodge(jitter.width = 0.2, dodge.width = .8),
size = 4) +
#geom_text(aes(label = paste0(round(percent_NOP), "%")), position = position_stack(vjust = 0.5)) +
#scale_fill_brewer(palette = "Dark2", name = "Number of People per Group") +
labs(
title = "Study Rooms Requests by Group Size"
) +
theme_void()
#ggsave(one, file = "pie12.png")
#Still really difficult to see graphically so will make a table
ggplot(prints, aes(x = print)) +
geom_bar()
table_prints <- table(prints$print)
table_counts_df <- as.data.frame(table_prints)
# Rename the columns in the data frame
colnames(table_counts_df) <- c("Print", "Count")
table_counts_df <- arrange(table_counts_df, desc(Count))
print(table_counts_df)
#write_xlsx(table_counts_df, "print distribution_after.xlsx")
#might be useful later when coloring each bar chart according to it's actual color
colors_list <- unique(prints$color)
#might want to explore making color a factor variable if I want a specific order for my bar chart
#prints$color <- factor(prints$color, ordered = FALSE)
# If we want to order the colors on the bar chart by count
# prints$color <- factor(prints$color, levels = names(sort(table(prints$color), decreasing = TRUE)))
ggplot(prints, aes(x= color, fill = color)) +
geom_bar(show.legend = FALSE, color = "black") +
labs(title = "Color Distribution for 3D Prints",
y = "Number of Prints",
x = NULL,
subtitle = "After Online Form (after 6/5/23)") +
scale_y_continuous(
breaks = seq(0, 14, by = 2),
#minor_breaks = seq(0, 22, by = 1),
limits = c(0, 14)) +
#Archive print list color values
#scale_fill_manual(values = c("black", "blue", "darkgrey", "green", "lightgrey", "pink", "hotpink3", "mediumpurple4", "red", "ivory1", "indianred1", "yellow")) +
#Current print list color values
#scale_fill_manual(values = c("black", 'blue', 'green', 'darkgrey', 'orange', 'lightpink', 'red', 'floralwhite', 'yellow')) +
scale_fill_manual(values = c( 'blue', 'green',  'orange')) +
theme_clean() +
theme(plot.subtitle = element_text(size = 10),
axis.text.x = element_text(angle = 30, hjust = 1))
#In case we need to rotate the x axis labels or put in a minor line
#theme(axis.text.x = element_text(angle = 45, hjust = 1),
#panel.grid.minor.y = element_line(color = "gray", linetype = "dotted"))
#ggsave(one, file = "print distribution_after.png")
#I filter out ID number 210 here because that was an outlier for contacting the person
prints <- prints %>% mutate(turnaround = as.Date(contacted_date) - as.Date(completion_time)) %>% filter(ID != 210)
#looking at turnaround time as a difftime variable
class(prints$turnaround)
summary(prints$turnaround, na.rm = TRUE)
mean(prints$turnaround, na.rm = TRUE)
#Changing turnaround variable to a numeric variable for a more standard analysis
prints$turnaround <- as.numeric(prints$turnaround)
summary(prints$turnaround, na.rm = TRUE)
mean_turnaround <- mean(prints$turnaround, na.rm = TRUE)
print(paste0("On average, it took us ", round(mean_turnaround, 2), " days to complete a patrons print once they requested it"))
emails_fails <- sum(prints$invalid_email == "X", na.rm = TRUE)
emails_fails <- round(emails_fails / length(prints$failed), digits = 2)
print(paste0(emails_fails * 100, "%", " patrons inputted email addresses were flagged failed by the program"))
fails <- sum(prints$failed == "X", na.rm = TRUE)
fail_percent <- round(fails / length(prints$failed), digits = 2)
print(paste0(fail_percent * 100, "%", " of our total print requests failed"))
prints_completed <- filter(prints, print_completed == "X")
picked_up <- sum(prints_completed$picked_up == "X", na.rm = TRUE)
picked_up <- round(picked_up / length(prints$picked_up), digits = 3)
print(paste0("Of the completed print rquests, ", picked_up * 100, "%", " of patrons have picked up their 3D prints"))
#Saving graphs
#ggsave(one, file = "C:/Users/Ryan/Coding Projects/KDL Project/3D Printing analysis")
#Wrangling the data to be in pie chart format
pies <- prints %>% count(print)
pies$percent_NOP <- pies$n / sum(pies$n) * 100
pies$print <- as.character(pies$print)
pies1 <- pies %>% head(20)
# Create the pie chart
ggplot(pies1, aes(x = "", y = percent_NOP, fill = print)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(round(percent_NOP), "%")),
position = position_jitterdodge(jitter.width = 0.2, dodge.width = .8),
size = 4) +
#geom_text(aes(label = paste0(round(percent_NOP), "%")), position = position_stack(vjust = 0.5)) +
#scale_fill_brewer(palette = "Dark2", name = "Number of People per Group") +
labs(
title = "3D print distribution"
) +
theme_void()
#ggsave(one, file = "pie12.png")
